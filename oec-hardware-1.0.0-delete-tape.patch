diff -urN oec-hardware/hwcompatible/compatibility.py oec-hardware_new/hwcompatible/compatibility.py
--- oec-hardware/hwcompatible/compatibility.py	2020-07-24 15:14:10.247167239 +0800
+++ oec-hardware_new/hwcompatible/compatibility.py	2020-07-24 14:42:19.385147869 +0800
@@ -266,12 +266,6 @@
             if device.get_property("PCI_CLASS") == "30000" or device.get_property("PCI_CLASS") == "38000":
                 sort_devices["video"] = [device]
                 continue
-            if device.get_property("SUBSYSTEM") == "tape" and "/dev/st" in device.get_property("DEVNAME"):
-                try:
-                    sort_devices["tape"].extend([device])
-                except KeyError:
-                    sort_devices["tape"] = [device]
-                continue
             if (device.get_property("DEVTYPE") == "disk" and not device.get_property("ID_TYPE")) or \
                     device.get_property("ID_TYPE") == "disk":
                 if "nvme" in device.get_property("DEVPATH"):
diff -urN oec-hardware/README.md oec-hardware_new/README.md
--- oec-hardware/README.md	2020-07-24 15:14:10.243167168 +0800
+++ oec-hardware_new/README.md	2020-07-24 14:42:19.381147798 +0800
@@ -335,15 +335,11 @@
 
     使用 nvme-cli 工具对盘进行格式化、读写、查询测试。
 
-13. **tape**
-
-    测试磁带是否正常读写。
-
-14. **usb**
+13. **usb**
 
     插拔 usb 设备，测试 usb 接口能否正常识别。
 
-15. **acpi**
+14. **acpi**
 
     利用 acpidump 工具读取数据。
 
diff -urN oec-hardware/tests/tape/Makefile oec-hardware_new/tests/tape/Makefile
--- oec-hardware/tests/tape/Makefile	2020-07-24 15:14:10.255167381 +0800
+++ oec-hardware_new/tests/tape/Makefile	1970-01-01 08:00:00.000000000 +0800
@@ -1,22 +0,0 @@
-# Copyright (c) 2020 Huawei Technologies Co., Ltd.
-# oec-hardware is licensed under the Mulan PSL v2.
-# You can use this software according to the terms and conditions of the Mulan PSL v2.
-# You may obtain a copy of Mulan PSL v2 at:
-#     http://license.coscl.org.cn/MulanPSL2
-# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR
-# IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR
-# PURPOSE.
-# See the Mulan PSL v2 for more details.
-# Create: 2020-04-01
-
-.PHONY: install clean
-
-all: ;
-
-install:
-	mkdir -p $(DEST)
-	cp -a *.py $(DEST)
-	chmod a+x $(DEST)/*.py
-
-clean:
-	rm -rf $(DEST)
diff -urN oec-hardware/tests/tape/tape.py oec-hardware_new/tests/tape/tape.py
--- oec-hardware/tests/tape/tape.py	2020-07-24 15:14:10.255167381 +0800
+++ oec-hardware_new/tests/tape/tape.py	1970-01-01 08:00:00.000000000 +0800
@@ -1,87 +0,0 @@
-#!/usr/bin/env python
-# coding: utf-8
-
-# Copyright (c) 2020 Huawei Technologies Co., Ltd.
-# oec-hardware is licensed under the Mulan PSL v2.
-# You can use this software according to the terms and conditions of the Mulan PSL v2.
-# You may obtain a copy of Mulan PSL v2 at:
-#     http://license.coscl.org.cn/MulanPSL2
-# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR
-# IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR
-# PURPOSE.
-# See the Mulan PSL v2 for more details.
-# Create: 2020-04-01
-
-import argparse
-
-from hwcompatible.test import Test
-from hwcompatible.command import Command, CertCommandError
-
-
-class TapeTest(Test):
-    """
-    Tape test
-    """
-    def __init__(self):
-        Test.__init__(self)
-        self.args = None
-        self.device = None
-        self.tapeDevice = None
-
-    def setup(self, args=None):
-        """
-        Initialization before test
-        :param args:
-        :return:
-        """
-        self.args = args or argparse.Namespace()
-        self.device = getattr(args, "device", None)
-        self.tapeDevice = self.device.get_property("DEVNAME")
-        if self.tapeDevice == "":
-            print("Did not found any Tape Device")
-        else:
-            print("Found the Tape Device :\n %s" % self.tapeDevice)
-
-    def test(self):
-        """
-        test case
-        :return:
-        """
-        if not self.tapeDevice:
-            return False
-
-        print("Testing tape device %s" % self.tapeDevice)
-        # set default block size to 32k (64 x 512byte = 32k)
-        bs = 64
-        # rewind the tape
-        try:
-            tape_rewind = Command("mt -f %s rewind 2>/dev/null" % self.tapeDevice).read()
-            print("Rewind tape : \n %s" % tape_rewind)
-        except CertCommandError as exception:
-            print(exception)
-            return False
-        # Write data
-        try:
-            tapewritedata = Command("tar -Pcb %s -f %s /usr" % (bs, self.tapeDevice)).read()
-            if tapewritedata == 0:
-                print("Write data done. Start comparing ...")
-                # Compare data
-                comparedata = Command("tar -Pdb %s -f %s /usr" % (bs, self.tapeDevice)).read()
-                if comparedata == 0:
-                    print("Tape test on device %s passed." % self.tapeDevice)
-                    return True
-                else:
-                    print("Error: data comparison fail.")
-                    return False
-            else:
-                print("Error: write data fail.")
-                return False
-
-        except CertCommandError as exception:
-            print(exception)
-            return False
-
-
-if __name__ == "__main__":
-    main = TapeTest()
-    main.test()
